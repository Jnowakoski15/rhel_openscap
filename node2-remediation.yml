---
###############################################################################
#
# Ansible Playbook generated from evaluation of CIS Red Hat Enterprise Linux 8 Benchmark for Level 1 - Server
#
# Profile ID: xccdf_org.ssgproject.content_profile_cis_server_l1
# XCCDF Version:  unknown
#
# Evaluation Start Time:  2022-05-02T17:37:42+00:00
# Evaluation End Time:  2022-05-02T17:37:52+00:00
#
# This file was generated by OpenSCAP 1.3.5 using:
# $ oscap xccdf generate fix --result-id xccdf_org.open-scap_testresult_xccdf_org.ssgproject.content_profile_cis_server_l1 --fix-type ansible xccdf-results.xml
#
# This Ansible Playbook is generated from the results of a profile evaluation.
# It attempts to remediate all issues from the selected rules that failed the test.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


- hosts: all
  vars:
    login_banner_text: !!str ^\-\-[\s\n]+WARNING[\s\n]+\-\-[\s\n]+This[\s\n]+system[\s\n]+is[\s\n]+for[\s\n]+the[\s\n]+use[\s\n]+of[\s\n]+authorized[\s\n]+users[\s\n]+only\.[\s\n]+Individuals[\s\n]+using[\s\n]+this[\s\n]+computer[\s\n]+system[\s\n]+without[\s\n]+authority[\s\n]+or[\s\n]+in[\s\n]+excess[\s\n]+of[\s\n]+their[\s\n]+authority[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+having[\s\n]+all[\s\n]+their[\s\n]+activities[\s\n]+on[\s\n]+this[\s\n]+system[\s\n]+monitored[\s\n]+and[\s\n]+recorded[\s\n]+by[\s\n]+system[\s\n]+personnel\.[\s\n]+Anyone[\s\n]+using[\s\n]+this[\s\n]+system[\s\n]+expressly[\s\n]+consents[\s\n]+to[\s\n]+such[\s\n]+monitoring[\s\n]+and[\s\n]+is[\s\n]+advised[\s\n]+that[\s\n]+if[\s\n]+such[\s\n]+monitoring[\s\n]+reveals[\s\n]+possible[\s\n]+evidence[\s\n]+of[\s\n]+criminal[\s\n]+activity[\s\n]+system[\s\n]+personal[\s\n]+may[\s\n]+provide[\s\n]+the[\s\n]+evidence[\s\n]+of[\s\n]+such[\s\n]+monitoring[\s\n]+to[\s\n]+law[\s\n]+enforcement[\s\n]+officials\.$
    var_password_pam_remember: !!str 5
    var_password_pam_remember_control_flag: !!str required
    var_password_pam_minclass: !!str 4
    var_password_pam_minlen: !!str 14
    var_password_pam_retry: !!str 3
    var_account_disable_post_pw_expiration: !!str 30
    var_accounts_maximum_age_login_defs: !!str 365
    var_accounts_minimum_age_login_defs: !!str 7
    var_accounts_tmout: !!str 900
    var_accounts_user_umask: !!str 027
    sysctl_net_ipv6_conf_all_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_source_route_value: !!str 0
    sysctl_net_ipv6_conf_all_forwarding_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_all_log_martians_value: !!str 1
    sysctl_net_ipv4_conf_all_secure_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv4_conf_default_log_martians_value: !!str 1
    sysctl_net_ipv4_conf_default_rp_filter_value: !!str 1
    sysctl_net_ipv4_conf_default_secure_redirects_value: !!str 0
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str 1
    sysctl_net_ipv4_tcp_syncookies_value: !!str 1
  tasks:
    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80844-4
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-08-010359
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_aide_installed


    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80676-0
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80676-0
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy





    - name: Modify the System Login Banner - ensure correct banner
      copy:
        dest: /etc/issue
        content: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80763-6
        - DISA-STIG-RHEL-08-010060
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - banner_etc_issue
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - unknown_strategy





    - name: Modify the System Message of the Day Banner - ensure correct banner
      copy:
        dest: /etc/motd
        content: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-83496-0
        - banner_etc_motd
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - unknown_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-83478-8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020221
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_password_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed





    - name: 'Limit Password Reuse: password-auth: Check for existing entry'
      lineinfile:
        path: /etc/pam.d/password-auth
        create: false
        regexp: ^password.*pam_pwhistory.so.*
        state: absent
      check_mode: true
      changed_when: false
      register: pam_pwhistory
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-83478-8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020221
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_password_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: 'Limit Password Reuse: password-auth'
      block:

        - name: 'Limit Password Reuse: password-auth - Ensure correct control value'
          pamd:
            name: password-auth
            type: password
            control: '{{ item }}'
            module_path: pam_pwhistory.so
            new_control: '{{ var_password_pam_remember_control_flag }}'
          loop:
            - required
            - optional
            - requisite
            - sufficient
            - binding

        - name: 'Limit Password Reuse: password-auth - Ensure remember argument in pam_pwhistory'
          pamd:
            name: password-auth
            type: password
            control: '{{ var_password_pam_remember_control_flag }}'
            module_path: pam_pwhistory.so
            module_arguments: use_authtok remember={{ var_password_pam_remember }}
            state: args_present
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 1
      tags:
        - CCE-83478-8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020221
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_password_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: 'Limit Password Reuse: password-auth - Add pam_pwhistory'
      pamd:
        name: password-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        new_type: password
        new_control: '{{ var_password_pam_remember_control_flag }}'
        new_module_path: pam_pwhistory.so
        module_arguments: use_authtok remember={{ var_password_pam_remember }}
        state: before
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 0
      tags:
        - CCE-83478-8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020221
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_password_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-83480-4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020220
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_system_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed





    - name: 'Limit Password Reuse: system-auth: Check for existing entry'
      lineinfile:
        path: /etc/pam.d/system-auth
        create: false
        regexp: ^password.*pam_pwhistory.so.*
        state: absent
      check_mode: true
      changed_when: false
      register: pam_pwhistory
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-83480-4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020220
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_system_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: 'Limit Password Reuse: system-auth'
      block:

        - name: 'Limit Password Reuse: system-auth - Ensure correct control value'
          pamd:
            name: system-auth
            type: password
            control: '{{ item }}'
            module_path: pam_pwhistory.so
            new_control: '{{ var_password_pam_remember_control_flag }}'
          loop:
            - required
            - optional
            - requisite
            - sufficient
            - binding

        - name: 'Limit Password Reuse: system-auth - Ensure remember argument in pam_pwhistory'
          pamd:
            name: system-auth
            type: password
            control: '{{ var_password_pam_remember_control_flag }}'
            module_path: pam_pwhistory.so
            module_arguments: use_authtok remember={{ var_password_pam_remember }}
            state: args_present
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 1
      tags:
        - CCE-83480-4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020220
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_system_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: 'Limit Password Reuse: system-auth - Add pam_pwhistory'
      pamd:
        name: system-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        new_type: password
        new_control: '{{ var_password_pam_remember_control_flag }}'
        new_module_path: pam_pwhistory.so
        module_arguments: use_authtok remember={{ var_password_pam_remember }}
        state: before
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 0
      tags:
        - CCE-83480-4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020220
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_pwhistory_remember_system_auth
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-82046-4
        - DISA-STIG-RHEL-08-020160
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(4)
        - NIST-800-53-IA-5(c)
        - accounts_password_pam_minclass
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Ensure PAM variable minclass is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minclass
        line: minclass = {{ var_password_pam_minclass }}
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-82046-4
        - DISA-STIG-RHEL-08-020160
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(4)
        - NIST-800-53-IA-5(c)
        - accounts_password_pam_minclass
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80656-2
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020230
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(4)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - accounts_password_pam_minlen
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Ensure PAM variable minlen is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-80656-2
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020230
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(4)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - accounts_password_pam_minlen
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80664-6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-08-020100
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - accounts_password_pam_retry
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed



    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
      replace:
        dest: '{{ item }}'
        regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
        replace: \g<1>{{ var_password_pam_retry }}\g<3>
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-80664-6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-08-020100
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - accounts_password_pam_retry
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
      replace:
        dest: '{{ item }}'
        regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
        replace: \g<0> retry={{ var_password_pam_retry }}
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-80664-6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-08-020100
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - accounts_password_pam_retry
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80954-1
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020260
        - NIST-800-171-3.5.6
        - NIST-800-53-AC-2(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-4(e)
        - PCI-DSS-Req-8.1.4
        - account_disable_post_pw_expiration
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: true
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: INACTIVE={{ var_account_disable_post_pw_expiration }}
      when: '"shadow-utils" in ansible_facts.packages'
      tags:
        - CCE-80954-1
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020260
        - NIST-800-171-3.5.6
        - NIST-800-53-AC-2(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-4(e)
        - PCI-DSS-Req-8.1.4
        - account_disable_post_pw_expiration
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80647-1
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-08-020200
        - NIST-800-171-3.5.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.4
        - accounts_maximum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Set Password Maximum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
      when: '"shadow-utils" in ansible_facts.packages'
      tags:
        - CCE-80647-1
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-08-020200
        - NIST-800-171-3.5.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.4
        - accounts_maximum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80648-9
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020190
        - NIST-800-171-3.5.8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - accounts_minimum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Set Password Minimum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MIN_DAYS
        line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
      when: '"shadow-utils" in ansible_facts.packages'
      tags:
        - CCE-80648-9
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-08-020190
        - NIST-800-171-3.5.8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - accounts_minimum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: restrict usage of su command only to members of wheel group
      replace:
        path: /etc/pam.d/su
        regexp: ^[\s]*#[\s]*auth[\s]+required[\s]+pam_wheel\.so[\s]+use_uid$
        replace: auth             required        pam_wheel.so use_uid
      tags:
        - CCE-83318-6
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - use_pam_wheel_for_su





    - name: Set Interactive Session Timeout
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/profile.d/tmout.sh
            create: false
            regexp: ^\s*TMOUT=
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/profile.d/tmout.sh
          lineinfile:
            path: /etc/profile.d/tmout.sh
            create: false
            regexp: ^\s*TMOUT=
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/profile.d/tmout.sh
          lineinfile:
            path: /etc/profile.d/tmout.sh
            create: true
            regexp: ^\s*TMOUT=
            line: TMOUT={{ var_accounts_tmout }}
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80673-7
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-AC-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-10
        - accounts_tmout
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy





    - name: Set user umask in /etc/bashrc
      replace:
        path: /etc/bashrc
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      tags:
        - CCE-81036-6
        - DISA-STIG-RHEL-08-020353
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - accounts_umask_etc_bashrc
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-82888-9
        - DISA-STIG-RHEL-08-020351
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - accounts_umask_etc_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy



    - name: Ensure the Default UMASK is Set Correctly
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^UMASK
        line: UMASK {{ var_accounts_user_umask }}
      when: '"shadow-utils" in ansible_facts.packages'
      tags:
        - CCE-82888-9
        - DISA-STIG-RHEL-08-020351
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - accounts_umask_etc_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy





    - name: Set user umask in /etc/profile
      replace:
        path: /etc/profile
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      tags:
        - CCE-81035-8
        - DISA-STIG-RHEL-08-020353
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - accounts_umask_etc_profile
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80800-6
        - CJIS-5.5.2.2
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_groupowner_grub2_cfg
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        group: '0'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-80800-6
        - CJIS-5.5.2.2
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_groupowner_grub2_cfg
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80805-5
        - CJIS-5.5.2.2
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_owner_grub2_cfg
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        owner: '0'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-80805-5
        - CJIS-5.5.2.2
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_owner_grub2_cfg
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82998-6
        - DISA-STIG-RHEL-08-040100
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_firewalld_installed


    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
            masked: 'no'
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80877-4
        - DISA-STIG-RHEL-08-040101
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - NIST-800-53-AC-4
        - NIST-800-53-CA-3(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(21)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_firewalld_enabled


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_ra.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81006-9
        - DISA-STIG-RHEL-08-040261
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_ra

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_ra from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_ra
        replace: '#net.ipv6.conf.all.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81006-9
        - DISA-STIG-RHEL-08-040261
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_ra



    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81006-9
        - DISA-STIG-RHEL-08-040261
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_ra


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81009-3
        - DISA-STIG-RHEL-08-040280
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_redirects

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_redirects
        replace: '#net.ipv6.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81009-3
        - DISA-STIG-RHEL-08-040280
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_redirects



    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81009-3
        - DISA-STIG-RHEL-08-040280
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81013-5
        - DISA-STIG-RHEL-08-040240
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_source_route
        replace: '#net.ipv6.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81013-5
        - DISA-STIG-RHEL-08-040240
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route



    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81013-5
        - DISA-STIG-RHEL-08-040240
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.forwarding.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82863-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_forwarding

    - name: Comment out any occurrences of net.ipv6.conf.all.forwarding from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.all.forwarding
        replace: '#net.ipv6.conf.all.forwarding'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82863-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_forwarding



    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '{{ sysctl_net_ipv6_conf_all_forwarding_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82863-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_forwarding


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_ra.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81007-7
        - DISA-STIG-RHEL-08-040262
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_ra

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_ra from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_ra
        replace: '#net.ipv6.conf.default.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81007-7
        - DISA-STIG-RHEL-08-040262
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_ra



    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81007-7
        - DISA-STIG-RHEL-08-040262
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_ra


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81010-1
        - DISA-STIG-RHEL-08-040210
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_redirects

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_redirects from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_redirects
        replace: '#net.ipv6.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81010-1
        - DISA-STIG-RHEL-08-040210
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_redirects



    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81010-1
        - DISA-STIG-RHEL-08-040210
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81015-0
        - DISA-STIG-RHEL-08-040250
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_source_route

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_source_route
        replace: '#net.ipv6.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81015-0
        - DISA-STIG-RHEL-08-040250
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_source_route



    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81015-0
        - DISA-STIG-RHEL-08-040250
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-6.1(iv)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_source_route


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80917-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040279
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_redirects
        replace: '#net.ipv4.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80917-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040279
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects



    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80917-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040279
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.log_martians.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81018-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity

    - name: Comment out any occurrences of net.ipv4.conf.all.log_martians from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.log_martians
        replace: '#net.ipv4.conf.all.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81018-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity



    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81018-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.secure_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81016-8
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_secure_redirects

    - name: Comment out any occurrences of net.ipv4.conf.all.secure_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.secure_redirects
        replace: '#net.ipv4.conf.all.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81016-8
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_secure_redirects



    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81016-8
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_secure_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80919-4
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040209
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_redirects

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_redirects from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_redirects
        replace: '#net.ipv4.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80919-4
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040209
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_redirects



    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80919-4
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040209
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80920-2
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040249
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_source_route
        replace: '#net.ipv4.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80920-2
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040249
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route



    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80920-2
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040249
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.log_martians.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81020-0
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity

    - name: Comment out any occurrences of net.ipv4.conf.default.log_martians from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.log_martians
        replace: '#net.ipv4.conf.default.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81020-0
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity



    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81020-0
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.rp_filter.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81022-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_rp_filter

    - name: Comment out any occurrences of net.ipv4.conf.default.rp_filter from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.rp_filter
        replace: '#net.ipv4.conf.default.rp_filter'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81022-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_rp_filter



    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81022-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_rp_filter


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.secure_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81017-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_secure_redirects

    - name: Comment out any occurrences of net.ipv4.conf.default.secure_redirects from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.secure_redirects
        replace: '#net.ipv4.conf.default.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81017-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_secure_redirects



    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81017-6
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_secure_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80922-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040230
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts

    - name: Comment out any occurrences of net.ipv4.icmp_echo_ignore_broadcasts from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts
        replace: '#net.ipv4.icmp_echo_ignore_broadcasts'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80922-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040230
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts



    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80922-8
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040230
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81023-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity

    - name: Comment out any occurrences of net.ipv4.icmp_ignore_bogus_error_responses
        from /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses
        replace: '#net.ipv4.icmp_ignore_bogus_error_responses'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81023-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity



    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81023-4
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.tcp_syncookies.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80923-6
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_tcp_syncookies

    - name: Comment out any occurrences of net.ipv4.tcp_syncookies from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.tcp_syncookies
        replace: '#net.ipv4.tcp_syncookies'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80923-6
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_tcp_syncookies



    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80923-6
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_tcp_syncookies


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.send_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80918-6
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040220
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: Comment out any occurrences of net.ipv4.conf.all.send_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.send_redirects
        replace: '#net.ipv4.conf.all.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80918-6
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040220
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80918-6
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040220
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.send_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80921-0
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040270
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: Comment out any occurrences of net.ipv4.conf.default.send_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.send_redirects
        replace: '#net.ipv4.conf.default.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80921-0
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040270
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80921-0
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-08-040270
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.ip_forward.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81024-2
        - DISA-STIG-RHEL-08-040260
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Comment out any occurrences of net.ipv4.ip_forward from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.ip_forward
        replace: '#net.ipv4.ip_forward'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81024-2
        - DISA-STIG-RHEL-08-040260
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81024-2
        - DISA-STIG-RHEL-08-040260
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward


    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: cramfs
        line: install cramfs /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81031-7
        - DISA-STIG-RHEL-08-040025
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_cramfs_disabled
        - low_complexity
        - low_severity
        - medium_disruption
        - reboot_required


    - name: Ensure kernel module 'squashfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/squashfs.conf
        regexp: squashfs
        line: install squashfs /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-83498-6
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_squashfs_disabled
        - low_complexity
        - low_severity
        - medium_disruption
        - reboot_required


    - name: Ensure kernel module 'udf' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/udf.conf
        regexp: udf
        line: install udf /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82729-5
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_udf_disabled
        - low_complexity
        - low_severity
        - medium_disruption
        - reboot_required


    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: usb-storage
        line: install usb-storage /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80835-2
        - DISA-STIG-RHEL-08-040080
        - NIST-800-171-3.1.21
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - kernel_module_usb-storage_disabled
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required


    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: If /dev/shm not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /dev/shm
          - tmpfs
          - tmpfs
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Make sure noexec option is part of the to /dev/shm options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Ensure /dev/shm is mounted with noexec option
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or (""
          | length == 0)
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-81048-1
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_home_nodev
        - no_reboot_needed
        - unknown_severity

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-81048-1
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_home_nodev
        - no_reboot_needed
        - unknown_severity

    - name: If /home not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /home
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-81048-1
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_home_nodev
        - no_reboot_needed
        - unknown_severity

    - name: Make sure nodev option is part of the to /home options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options
      tags:
        - CCE-81048-1
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_home_nodev
        - no_reboot_needed
        - unknown_severity

    - name: Ensure /home is mounted with nodev option
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-81048-1
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_home_nodev
        - no_reboot_needed
        - unknown_severity


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82623-0
        - DISA-STIG-RHEL-08-040123
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nodev
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82623-0
        - DISA-STIG-RHEL-08-040123
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nodev
        - no_reboot_needed

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82623-0
        - DISA-STIG-RHEL-08-040123
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nodev
        - no_reboot_needed

    - name: Make sure nodev option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options
      tags:
        - CCE-82623-0
        - DISA-STIG-RHEL-08-040123
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nodev
        - no_reboot_needed

    - name: Ensure /tmp is mounted with nodev option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82623-0
        - DISA-STIG-RHEL-08-040123
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nodev
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82139-7
        - DISA-STIG-RHEL-08-040125
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_noexec
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82139-7
        - DISA-STIG-RHEL-08-040125
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_noexec
        - no_reboot_needed

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82139-7
        - DISA-STIG-RHEL-08-040125
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_noexec
        - no_reboot_needed

    - name: Make sure noexec option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options
      tags:
        - CCE-82139-7
        - DISA-STIG-RHEL-08-040125
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_noexec
        - no_reboot_needed

    - name: Ensure /tmp is mounted with noexec option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82139-7
        - DISA-STIG-RHEL-08-040125
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_noexec
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82140-5
        - DISA-STIG-RHEL-08-040124
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nosuid
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82140-5
        - DISA-STIG-RHEL-08-040124
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nosuid
        - no_reboot_needed

    - name: If /tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82140-5
        - DISA-STIG-RHEL-08-040124
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nosuid
        - no_reboot_needed

    - name: Make sure nosuid option is part of the to /tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options
      tags:
        - CCE-82140-5
        - DISA-STIG-RHEL-08-040124
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nosuid
        - no_reboot_needed

    - name: Ensure /tmp is mounted with nosuid option
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82140-5
        - DISA-STIG-RHEL-08-040124
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_tmp_nosuid
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82068-8
        - DISA-STIG-RHEL-08-040132
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nodev
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82068-8
        - DISA-STIG-RHEL-08-040132
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nodev
        - no_reboot_needed

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /var/tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82068-8
        - DISA-STIG-RHEL-08-040132
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nodev
        - no_reboot_needed

    - name: Make sure nodev option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nodev" not in mount_info.options
      tags:
        - CCE-82068-8
        - DISA-STIG-RHEL-08-040132
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nodev
        - no_reboot_needed

    - name: Ensure /var/tmp is mounted with nodev option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82068-8
        - DISA-STIG-RHEL-08-040132
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nodev
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82151-2
        - DISA-STIG-RHEL-08-040134
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_noexec
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82151-2
        - DISA-STIG-RHEL-08-040134
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_noexec
        - no_reboot_needed

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /var/tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82151-2
        - DISA-STIG-RHEL-08-040134
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_noexec
        - no_reboot_needed

    - name: Make sure noexec option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "noexec" not in mount_info.options
      tags:
        - CCE-82151-2
        - DISA-STIG-RHEL-08-040134
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_noexec
        - no_reboot_needed

    - name: Ensure /var/tmp is mounted with noexec option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82151-2
        - DISA-STIG-RHEL-08-040134
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_noexec
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82154-6
        - DISA-STIG-RHEL-08-040133
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nosuid
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - CCE-82154-6
        - DISA-STIG-RHEL-08-040133
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nosuid
        - no_reboot_needed

    - name: If /var/tmp not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /var/tmp
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - CCE-82154-6
        - DISA-STIG-RHEL-08-040133
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nosuid
        - no_reboot_needed

    - name: Make sure nosuid option is part of the to /var/tmp options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options
      tags:
        - CCE-82154-6
        - DISA-STIG-RHEL-08-040133
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nosuid
        - no_reboot_needed

    - name: Ensure /var/tmp is mounted with nosuid option
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - CCE-82154-6
        - DISA-STIG-RHEL-08-040133
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_var_tmp_nosuid
        - no_reboot_needed


    - name: Disable core dump backtraces
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            line: ProcessSizeMax=0
            state: present
      tags:
        - CCE-82251-0
        - DISA-STIG-RHEL-08-010675
        - coredump_disable_backtraces
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Disable storing core dump
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            line: Storage=none
            state: present
      tags:
        - CCE-82252-8
        - DISA-STIG-RHEL-08-010674
        - coredump_disable_storage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-81038-2
        - DISA-STIG-RHEL-08-010673
        - disable_users_coredumps
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: disable core dumps with limits
      lineinfile:
        dest: /etc/security/limits.conf
        regexp: ^[^#].*core
        line: '*        hard       core      0'
        create: true
      when: '"pam" in ansible_facts.packages'
      tags:
        - CCE-81038-2
        - DISA-STIG-RHEL-08-010673
        - disable_users_coredumps
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*fs.suid_dumpable.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80912-9
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_fs_suid_dumpable

    - name: Comment out any occurrences of fs.suid_dumpable from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*fs.suid_dumpable
        replace: '#fs.suid_dumpable'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80912-9
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_fs_suid_dumpable

    - name: Ensure sysctl fs.suid_dumpable is set to 0
      sysctl:
        name: fs.suid_dumpable
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80912-9
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_fs_suid_dumpable


    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*kernel.randomize_va_space.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80916-0
        - DISA-STIG-RHEL-08-010430
        - NIST-800-171-3.1.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_randomize_va_space

    - name: Comment out any occurrences of kernel.randomize_va_space from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*kernel.randomize_va_space
        replace: '#kernel.randomize_va_space'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80916-0
        - DISA-STIG-RHEL-08-010430
        - NIST-800-171-3.1.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_randomize_va_space

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80916-0
        - DISA-STIG-RHEL-08-010430
        - NIST-800-171-3.1.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_randomize_va_space


    - name: Test for existence /etc/cron.d/
      stat:
        path: /etc/cron.d/
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82277-5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_d
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0700 on /etc/cron.d/
      file:
        path: /etc/cron.d/
        mode: '0700'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82277-5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_d
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /etc/cron.daily/
      stat:
        path: /etc/cron.daily/
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82240-3
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_daily
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0700 on /etc/cron.daily/
      file:
        path: /etc/cron.daily/
        mode: '0700'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82240-3
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_daily
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /etc/cron.hourly/
      stat:
        path: /etc/cron.hourly/
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82230-4
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_hourly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0700 on /etc/cron.hourly/
      file:
        path: /etc/cron.hourly/
        mode: '0700'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82230-4
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_hourly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /etc/cron.monthly/
      stat:
        path: /etc/cron.monthly/
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82263-5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_monthly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0700 on /etc/cron.monthly/
      file:
        path: /etc/cron.monthly/
        mode: '0700'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82263-5
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_monthly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /etc/cron.weekly/
      stat:
        path: /etc/cron.weekly/
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82253-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_weekly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0700 on /etc/cron.weekly/
      file:
        path: /etc/cron.weekly/
        mode: '0700'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82253-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_cron_weekly
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82206-4
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_crontab
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0600 on /etc/crontab
      file:
        path: /etc/crontab
        mode: '0600'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CCE-82206-4
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_crontab
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-82879-8
        - chronyd_run_as_chrony_user
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Detect if file /etc/sysconfig/chronyd is not empty or missing
      find:
        path: /etc/sysconfig/
        patterns: chronyd
        contains: ^([\s]*OPTIONS=["]?[^"]*)("?)
      register: chronyd_file
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"chrony" in ansible_facts.packages'
      tags:
        - CCE-82879-8
        - chronyd_run_as_chrony_user
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Remove any previous configuration of user used to run chronyd process
      replace:
        path: /etc/sysconfig/chronyd
        regexp: \s*-u\s+\w+\s*
        replace: ' '
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"chrony" in ansible_facts.packages'
        - chronyd_file is defined and chronyd_file.matched > 0
      tags:
        - CCE-82879-8
        - chronyd_run_as_chrony_user
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Correct existing line in /etc/sysconfig/chronyd to run chronyd as chrony user
      lineinfile:
        path: /etc/sysconfig/chronyd
        regexp: ^([\s]*OPTIONS=["]?[^"]*)("?)
        line: \1 -u chrony\2
        state: present
        backrefs: true
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"chrony" in ansible_facts.packages'
        - chronyd_file is defined and chronyd_file.matched > 0
      tags:
        - CCE-82879-8
        - chronyd_run_as_chrony_user
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Insert correct line into /etc/sysconfig/chronyd ensuring chronyd runs as chrony
        user
      lineinfile:
        path: /etc/sysconfig/chronyd
        line: OPTIONS="-u chrony"
        state: present
        create: true
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"chrony" in ansible_facts.packages'
        - chronyd_file is defined and chronyd_file.matched == 0
      tags:
        - CCE-82879-8
        - chronyd_run_as_chrony_user
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed


